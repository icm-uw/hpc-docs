stages: 
  - test
  - deploy

.all:
  tags: 
    - www
  allow_failure: false 
  when: always
  dependencies: []    
  variables:
    ENV_NAME: "mkdocs-env"

test-script:
  stage: test
  extends: .all
  script:
    - echo "a"
    - source .gitlab-ci/sample_script.sh && echo "ok"
    - echo $teraz
    - echo "b"
    - source .gitlab-ci/prepare_venv.sh
    - echo "c"

test-pages:
  stage: test
  extends: .all
  artifacts:
    untracked: true
    paths:
        - 'tmp'
    expire_in: 1 week
    when: always #on_failure
  script:
    # - source .gitlab-ci/prepare_venv.sh && echo "env prepared"
    - export VIRTUALENVWRAPPER_PYTHON=/bin/python3
    - export VIRTUALENVWRAPPER_VIRTUALENV=/home/gitlab-runner-nginx/.local/bin/virtualenv
    - source ~/.local/bin/virtualenvwrapper.sh
    - if lsvirtualenv | grep "$ENV_NAME" >/dev/null
      then
          mkvirtualenv $ENV_NAME
      else 
          echo "aaa"
          workon $ENV_NAME && echo "virtualenv $ENV_NAME activated"
          echo "bbb"
      fi
    - pip install --upgrade -r requirements.txt
    - workon $ENV_NAME && echo "virtualenv $ENV_NAME activated"
    - pip install --upgrade -r requirements.txt
    - mkdocs build --verbose --clean --strict
  allow_failure: false 

publish-pages:
  stage: deploy
  extends: .all
  script:
    # - source .gitlab-ci/prepare_venv.sh
    - export VIRTUALENVWRAPPER_PYTHON=/bin/python3
    - export VIRTUALENVWRAPPER_VIRTUALENV=/home/gitlab-runner-nginx/.local/bin/virtualenv
    - source ~/.local/bin/virtualenvwrapper.sh
    - workon $ENV_NAME && echo "virtualenv $ENV_NAME activated"
    - pip install --upgrade -r requirements.txt
    - mkdocs gh-deploy
  allow_failure: false 
